@PROPS CAPTION="Document for lua-org";	AUTHOR="Pengfei Yi";	DATE="##lua:os.date()##"; 

##toc:SEC|CODE##

* Introduction
* Properties

* Head lines

Head lines are text lines leaded by multiple ``*``s without any spaces at the beginning. The number of these ``*``s imply the level of contents below it. No-empty contents after these ``*``s mean the title.

* Blocks

Blocks are text contents between two same-level **head lines**. And the title of beginning head is the **id** of this block, which can be used to reference this block in other places in the document. In fact, if multiple blocks share a same **id**, this id will point to the one defined last. To end a block immediately, one can insert a head line without title below  the last line of the block. As the whole document is always treated as a block, blocks share the properties below:
	- A block can include other blocks.
	- A block is directly belong to a certain block.
	- Every lines are directly belong to a certain block.  

* Elements
Elements are items embedded in lines which are ebraced by couple of same tags. To make the parser process easier to implemented, these tags are encoded by double punctuates, e.g. ``##lua:"\#\#"##``, ``##lua:"\*\*"##``. According to different types of punctuates, the elements are divided to different types:
** processing elements 
While the document is processed ,a processing element means that the text content here should be the result of its code other than the text itself. All processing elements are enbraced by a couple of ``##lua:"\#\#"##``. They shared the form of ``##lua:"\#\#"##**protocol**:args1[|args2[|args3...]]##lua:"\#\#"##``. where the **protocol** here should be:
	- ref: the reference of a block by name, e.g. ``##lua:"\#\#"##ref:Introduction##lua:"\#\#"##`` makes ``##ref:Introduction##``.
	- lua: run an lua script, e.g. ``##lua:"\#\#"##lua:os.date()##lua:"\#\#"##`` makes ``##lua:os.date()##``.
	- ...
** style elements
Different from processing elements, style elements stand for text contents with styles, e.g. 
	- ``##lua:"\*\*"##text##lua:"\*\*"##`` = **text**
	- ``##lua:"\$ \$"##text##lua:"\$ \$"##`` = $$text$$
		- ``##lua:"\`\`"##text##lua:"\`\`"##`` = ``text``
	- ...
	
	1. adsfafdf
	1. adfsdfaf
	1. adfasdfafad
* Customization
All blocks and elements can be customized for different export file types by modify files named by there files, e.g. if some one wants to modify blocks or elements for ``html`` files, he can modify ``$lua-org-home-dir$/templates/html.lua`` or create a new file ``my-html.lua`` under the directory ``$lua-org-home-dir$/templates/``.
* Implementation
Given an input document $$I$$, the whole steps producing out put document $$O$$ are listed below:
	1. Parse $$I$$ line by line to make a document tree $$T$$, which includes blocks and lists.
	2. Process $$T$$ to assign numbers for blocks, including sections and other types of blocks.
	3. Convert $$T$$ to plain document $$D$$ applying styles for blocks.
	4. Processing all elements in $$D$$ to make the final output $$O$$.
* Examples
**** Source of this document
@PROPS TYPE="CODE"
##file:lua-org-doc.org##
****
* Summary